[{"title":"hexo语法","url":"/2023/03/31/tips/hexo/hexo%E8%AF%AD%E6%B3%95/","content":"不常使用 hexo，干脆把 hexo 常用命令直接写进博客里，方便自己看 \n\n\n\n# 创建博客$ hexo new post --path tips/hexo/hexo语法 &quot;hexo语法&quot;# 本地调试, 发布到 44944 端口$ hexo s -p 44944# 发布到服务器$ hexo g -d# 这个命令也是发布到服务器$ npm run deploy\n\n\n删除博客只需要直接删除本地文件, 然后 clean\n$ hexo clean$ hexo g","categories":["tips"],"tags":["hexo"]},{"title":"hexo部署到服务器","url":"/2023/03/31/tips/hexo/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"这个部署过程还挺坑，记录一下方面自己复刻, 主要是配置服务器的 nginx 和 git\n\n\n\n\n(1) 服务器配置主要分为 git 远程连接配置，git hook 文件配置，nginx 主页配置这三步\n参考教程：在自己的服务器上部署 hexo 博客\n配置服务器的第一步是设置无密码登陆，即在服务器上修改 ~/.ssh/authorized_keys文件，把客户端的~/ssh/id_rsa.pub复制到里面，即可实现直接 ssh 链接，不需要密码验证（github 的 ssh 连接原理也是如此）\n$ vim ~/.ssh/authorized_keys---(把自己电脑的 id_rsa.pub 数据复制到文件里)---\n\n1 配置服务器 nginx 服务重装过一遍服务器系统，ssh 登陆不上了\n解决办法是本地 .ssh 文件夹内的 kowns_hosts 删除服务器相关项目\n1. 卸载已存在的 nginx如果已存在 nginx 可以考虑卸载了。。。方便跟教程\n# 查找 nginx 相关文件whereis nginx | tr &#x27; &#x27; &#x27;\\n&#x27;# 删除上述文件/文件夹rm -rf  xxxx/nginx# 删除 nginxapt-get remove nginx*\n\n2. 下载 nginx# 进入安装目录cd /usr/local/src/# 下载wget http://nginx.org/download/nginx-1.22.0.tar.gz# 解压tar -xvf nginx-1.22.0.tar.gz# 重命名mv  nginx-1.10.2  nginx\n\n3. 编译 nginx# 进入目录并编译安装$ cd nginx# 安装编译必须的包$ apt-get install libpcre3 libpcre3-dev# 编译$ ./configure$ make$ make install# 设置 ngxin 的快捷执行$ alias nginx=/usr/local/nginx/sbin/nginx# 通过修改环境变量的方式也可以让 nginx 快捷执行（没必要, alias 够了）$ vim ~/.bashrc---# 添加这一句话export PATH=$PATH:/usr/local/nginx/sbin/---$ source ~/.bashrc\n\n\n\n4. 设置服务器主页文件夹方法是修改nginx.conf 文件，如下步骤\n找到 conf 文件\n下面看到了两个 nginx.conf，我们选择 nginx 文件夹下存在 sbin 文件夹的那个路径\n$ find / -name nginx.conf----/usr/local/nginx/conf/nginx.conf/usr/local/src/nginx/conf/nginx.conf\n\n修改 conf 文件\n特别注意： /root/blog/public 这个路径是将来服务器主页的地址，后面配置 git 的 hook 函数时也要用到这个地址！！\n$ vim /usr/local/nginx/conf/nginx.conf---# 添加 user root;user root;...http&#123;  ...  server &#123;    location / &#123;      # 修改为 root /root/blog/public; 后面我们的服务器主页就设置在这个文件夹下      root /root/blog/public;    &#125;  &#125;&#125;\n\n5. 运行 nginx# 查看 80 端口占用并 kill$ netstat -lnp | grep 80-----tcp6       0      0 :::80                   :::*                    LISTEN      42464/apache2-----# 强制杀死进程 42464，这个数字在上面的输出中有出现$ kill -9 42464# apache2 的占用比较特殊，需要手动关闭$ service apache2 stop# 启动 nginx$ nginx# 查看端口占用, nginx 主页是 80 端口$ lsof -i:80\n\n6. 重启 ngxinx# 重启$ nginx -s reload\n\n2 配置 git 仓库安装 git\n$ apt-get updata$ apt-get upgrade$ apt-get install git-all\n\n新建 git 仓库\n# 新建空仓库$ cd /root/blog/$ git init --bare zenithBlog.git\n\n添加 hook 用文件\n特别注意，配置 git 的 hook时，要用到配置 nginx 时定义的服务器主页地址  /root/blog/public\n# 新建 post-receive 文件$ vim ./zenithBlog.git/hooks/post-receive# 写 hook 文件# --work-tree 是 nginx.conf 中定义的服务器主页地址# --git-dir 是 hexo-deploy 的目标文件夹，也就是你刚刚创建的那个-----#!/bin/shgit --work-tree=/root/blog/public --git-dir=/root/blog/zenithBlog.git checkout -f-----\n\n修改 post-receive 为可执行\n$ chmod +x ./zenithBlog.git/hooks/post-receive\n\n\n\n（2）本地配置本地配置只有一个，修改_config.yml，定义博客的部署方式，注意把下面的 ip 地址改成服务器地址\n# ./zenithBlog/_config.ymldeploy:  type: git  repo: root@xxx.xxx.xxx.xxx:/root/blog/zenithBlog.git  branch: master\n\n安装 git 部署工具\n# ./zenithBlog/&gt; npm install hexo-deployer-git --save\n\n\n\n（3） 部署本地执行部署命令即可\n# 部署到 hexohexo g -d\n\n踩坑踩了不少坑，记录一下\n一、nginx 已安装，但文件混乱强烈建议重装 nginx，下面是我硬着头皮没重装，进行的尝试：\n网上说直接配置 nginx.conf, 使用  find / -name nginx.conf 命令可以找到这个文件\n但我的 nginx 是系统自带的，这个配置文件里没有关于 80 端口的配置\n不过在配置文件里看到了一句话 include /etc/nginx/modules-enables/*.conf，指出了其他配置文件目录也存在配置文件，几经转折，终于找到了有关 80 端口的配置，在 /etc/nginx/sites-available/default 这个文件内\n# 这文件的名字甚至都不是 nginx.conf，是真的坑爹$ vim /etc/nginx/sites-available/default------user root;...server &#123;    # 这两项用于定位， 一定是监听 80 端口的 server    listen 80 default_server;    listen [::]:80 default_server;    # 主页文件的 usr, dir    root /var/www/zenith;    index index.html index.htm index.nginx-debian.html;    server_name hyinan.com;&#125;\n\n二、文章部分渲染失败使用 hyinan.com 访问博客会渲染失败，www.hyinan.com 就能成功，逆天\n没找到解决办法，估计和阿里云那里的域名解析有关系，以后就用 www.hyinan.com 访问好了\n","categories":["tips"],"tags":["hexo"]},{"title":"搭建hexo博客","url":"/2023/03/31/tips/hexo/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/","content":"个人配置 hexo 的记录，参考了 B 站的教程。\n\n\n\n参考教程：手把手教你从 0 开始搭建自己的个人博客 |无坑版视频教程| hexo\nHello, world先让博客跑起来：下载 hexo，使用默认主题在本地运行\n一、 hexo 环境配置hexo 要用到 node.js，先安装 node.js \n1. 安装 node.jswindows 下自己找个教程安装 nodejs\n下载地址：node.js 官方下载\n安装说明：nodeJS 的安装与配置\n2. 安装 hexo敲命令安装 hexo，这个命令在 hexo 官网上有介绍，具体可以查看hexo 官网\n$  npm install -g hexo-cli\n\nnpm install -g hexo-cli 是在命令行中使用 npm（Node Package Manager）来全局安装 Hexo 博客生成器的命令。\n具体来说，npm install 是安装 npm 包的命令，-g 表示全局安装，hexo-cli 是要安装的包名。在安装 hexo-cli 包后，你可以在任何地方使用命令行输入 hexo 命令，使用 Hexo 博客生成器的相关功能，例如创建新文章、生成静态页面等。\n需要注意的是，使用 npm install -g 安装的包是全局可用的，而非针对某个项目的本地安装。因此，在安装时需要以管理员权限运行命令，以确保权限足够。此外，如果你在使用 Hexo 时遇到了问题，可以尝试使用 npm uninstall -g hexo-cli 命令卸载全局安装的 Hexo，并重新安装本地版本。\n二、创建本地博客用最少的步骤让 hexo 博客运行起来，下面进行介绍\n1. 初始化一个 hexo 目录下面这个命令会创建一个新的目录 ZenithBlog，其中包括 Hexo 博客生成器的基本目录结构和默认配置文件。在这个目录下，你可以通过编辑 Markdown 文件来撰写博客文章，并通过 Hexo 提供的命令来生成静态网站文件和发布到服务器等操作。\n$  hexo init ZenithBlog\n\nPS.执行这个命令前需要保证系统已经安装了 Node.js 和 npm\n2. 在目录中安装必要组件进入ZenithBlog目录执行 npm install 命令，这会在当前项目目录中查找 package.json 文件，并根据其中列出的依赖包列表安装所需的包。\n$ cd ZenithBlog$  npm install\n\n\n\n3. 启动 hexo在本地启动 hexo 服务，下面这个命令会启动 Hexo 博客的本地服务，并将博客站点的预览地址设为 http://localhost:44944。\n$ hexo s -p 44944\n\n在启动本地服务器后，可以在浏览器中输入 http://localhost:44944 来访问博客站点的本地预览。\n三. 把博客部署到 github先配置好 git 环境，然后就能把博客部署到服务器了\n1. 配置 git 环境分“下载git”，“配置 name 和 email 信息”，“免密连接 git”和“部署hexo”几个部分描述。\n① 下载 git网上有关 git 下载的教程很多，这里列一个：Git安装教程：git工具安装详细步骤 (itheima.com)\n② 设置账户信息安装完 git 后需要先创建个名字和 email 地址\n$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot;# 查看已有的配置git config --listgit config --global --list\n\n\n\n③ github 保存本地的 id_rsa.pubid_rsa.pub 文件保存在 ~/.ssh 目录下，如果没有的话用下面的命令创建一个\n# 下面的 email 和 前面的 user.email 要匹配$ ssh-keygen -t rsa -C &quot;email@example.com\n\n此时./ssh中会生成 id_rsa 和 id_rsa.pub 两个文件，其中id_rsa是私钥，id_rsa.pub是公钥\n需要把 id_rsa.pub 的内容上传到 github 的 sshKey 里，具体操作参考 github 官方教程：新增 SSH 密钥到 GitHub 帐户 - GitHub 文档\n④ 创建 github 项目项目名称和 github 名称有关系，我的 github 用户名是 hhhynnn，则需要创建一个名为 hhhynnn.github.io 的项目，其他名字不行，会报错。\n⑤ 更换 hexo 部署方式分两步走，第一步是下载部署所需插件，第二步是修改 _config.yml 文件，定义部署方式\nstep1. 下载 hexo-deployer-git这个组件非常重要，利用 git 来部署专用，不论是部署到 github 还是部署到阿里云都需要。\n$ npm install hexo-deployer-git --save\n\nstep2. 修改在ZenithBlog/_config.yml注意把下面的 repo 改成自己的 github 仓库地址\ndeploy:  type: git  repo: git@github.com:hhhynnn/hhhynnn.github.io.git  branch: master\n\nstep3. 设置 .gitignore把博客代码 push 到 github 的时候不要包含 /public 目录\n# .gitignore 内容public\n\nstep4. push 项目把 hexo 项目 Push 到 github 上\n$ git add remote origin git@github.com:hhhynnn/hhhynnn.github.io.git$ git push -u origin main\n\nstep5. 查看访问 https://hhhynnn.github.io 就能查看自己的博客，其中 hhhynnn 需要改成自己的 github 用户名\n③ git 配置代理的方法我的代理端口是 10808，协议是 socks5，用下面的方法配置代理\n$ git config --global http.proxy socks5://127.0.0.1:10808$ git config --global https.proxy socks5://127.0.0.1:10808\n\n将来想要取消代理可以输入:\n$ git config --global --unset http.proxy$ git config --global --unset https.proxy\n\n想要查看 git 的 config 配置信息可以输入:\n$ git config --system --list$ git config --global  --list$ git config --local  --list\n\n\n\n主题美化主题资源地址： Themes，东西很多，随便找，每个主题的 github 页面下都会介绍怎么配置主题，很简单。\n下面简单介绍如何配置主题 maupassant-hexo\n先下载主题到ZenithBlog/themes/maupassant目录\n$ git clone git@github.com:tufu9441/maupassant-hexo.git ./themes/maupassant\n\n按照主题作者的要求，下载必须要组件\n$ npm install hexo-renderer-pug --save$ npm install hexo-renderer-sass --save\n\n修改ZenithBlog/_config.yml文件的theme值\ntheme: maupassant\n\n清除原文件（非必需），重新生成文件，部署到远端\n$ hexo clean$ hexo g -d\n\n写作指南记录一下插入图片、设置文章的标签和类别等操作。\n一、插入图片需要用到 hexo-asset-image 这个插件\n1. 下载插件下载命令：\nnpm install hexo-asset-image --save\n\n\n\n修改_config.yml满足，把这一项改为 true =&gt; post_asset_folder: true\n\n这个组件目前有 bug（记录于 2020.05.27）\n解决方案为将文件node_modules/hexo-asset-image/index.js替换为如下的内容：\n&quot;use strict&quot;;var cheerio = require(&quot;cheerio&quot;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123;  return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split(&quot;.&quot;);hexo.extend.filter.register(&quot;after_post_render&quot;, function (data) &#123;  var config = hexo.config;  if (config.post_asset_folder) &#123;    var link = data.permalink;    if (version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)      var beginPos = getPosition(link, &quot;/&quot;, 1) + 1;    else var beginPos = getPosition(link, &quot;/&quot;, 3) + 1;    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.    var endPos = link.lastIndexOf(&quot;/&quot;) + 1;    link = link.substring(beginPos, endPos);    var toprocess = [&quot;excerpt&quot;, &quot;more&quot;, &quot;content&quot;];    for (var i = 0; i &lt; toprocess.length; i++) &#123;      var key = toprocess[i];      var $ = cheerio.load(data[key], &#123;        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false,      &#125;);      $(&quot;img&quot;).each(function () &#123;        if ($(this).attr(&quot;src&quot;)) &#123;          // For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.          var src = $(this).attr(&quot;src&quot;).replace(&quot;\\\\&quot;, &quot;/&quot;);          if (!/http[s]*.*|\\/\\/.*/.test(src) &amp;&amp; !/^\\s*\\//.test(src)) &#123;            // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.            // In addition, to support multi-level local directory.            var linkArray = link.split(&quot;/&quot;).filter(function (elem) &#123;              return elem != &quot;&quot;;            &#125;);            var srcArray = src.split(&quot;/&quot;).filter(function (elem) &#123;              return elem != &quot;&quot; &amp;&amp; elem != &quot;.&quot;;            &#125;);            if (srcArray.length &gt; 1) srcArray.shift();            src = srcArray.join(&quot;/&quot;);            $(this).attr(&quot;src&quot;, config.root + link + src);            console.info &amp;&amp;              console.info(&quot;update link as:--&gt;&quot; + config.root + link + src);          &#125;        &#125; else &#123;          console.info &amp;&amp; console.info(&quot;no src attr, skipped...&quot;);          console.info &amp;&amp; console.info($(this));        &#125;      &#125;);      data[key] = $.html();    &#125;  &#125;&#125;);\n\n\n\n2. 图片插入格式正确插入图片需要满足两个条件：\n\n图片保存在与 .md 同名的文件夹内；\n\n使用相对路劲引用图片；\n\n\n\n插入格式有两种：\n# 第一种 markdown 格式![image-20230402092129468](./搭建hexo博客/image-1.png)# 第二种 html 格式&lt;img src=&quot;./搭建hexo博客/image-1.png&quot; alt=&quot;image-1&quot; style=&quot;zoom:80%;&quot; /&gt;\n\n二、分类和标签参考教程： hexo 文档之 front-matter\n1. 分类 categories层次分类用 categories，如下面的分类表示本文章属于 Dirary-&gt;Life 类（Dirary 是父类）\ncategories:  - Diary  - Life\n\n一篇文章可以同时处于多个分类模块下，每一个都要用-[]标记\n举例：下面的分类表示文章属于 Diary-&gt;PlayStation，也属于 Diary-&gt;Gage，也属于 Life\ncategories:  - [Diary, PlayStation]  - [Diary, Games]  - [Life]\n\n2. 标签 tags标签很粗暴，直接连续写下去\n举例：下面的分类表示文章属于 PS3 和 Games\ntags:  - PS3  - Games\n\n","categories":["tips"],"tags":["hexo"]},{"title":"latex","url":"/2023/04/01/tips/latex/","content":"简单记一下 latex 相关的\n\n\n环境配置问题众所周知，latex 的编译属于老大难问题\n一、使用模板提示“缺少 .sty 文件”假设你已经有 .sty 文件了，现在的主要问题就是 .sty 文件放在哪里：① 放在 .tex 所在目录下；② 放在 latex 的 .sty 库目录下；\n下面介绍方法 ②\nstep1. 输入 kpsewhich --var-value=TEXMFHOME，按回车，得到一个路径,打开这个路径（文件夹）。如果路径中的某一层或几层文件夹不存在，就创建它们\nstep2. 最后会位于 texmf 文件夹。 在 texmf 中创建 tex 文件夹，在 tex 文件夹中创建 latex 文件夹。（把现在的路径记为 TEXMFHOME/tex/latex）\n\nstep3. 在 latex 文件夹下创建一个与 .sty 同名的文件夹，然后把 .sty 放进新建的这个文件夹里\n如上图所示，我的 picins.sty 就存放在 picins 文件夹内\n目前已经下载的包：\n\nnexus.sty, 下载地址一个漂亮的LaTeX模板设计\n\neasyphys.sty, 下载地址 Elegentbook魔改版\n\n\n命令我用的是 texlive，简单记一下命令\n# 查看某个 .sty 是否存在$ kpsewhich &lt;package-name&gt;.sty# 查看所有的已安装包$ tlmgr list --only-installed# 查看 texlive 版本$ latex -v\n\n排版一、公式Latex 的一大优势就是编辑公式，下面进行介绍\n此外强推一个网站，可以识别手写符号：Detexify LaTeX handwritten symbol recognition (kirelabs.org)\n1. 不同的公式编辑公式分为行内公式和行间公式，下面分别进行说明\n① 行内公式行内公式统一使用$...$来表达. $前后一般要有空格, 除非公式后面有标点符号\n② 行间公式对于行间公式, 要么编号, 要么不编号; 要么单行, 要么多行. 通过组合之后可知行间公式有四种: 单行编号、单行不编号、多行编号和多行不编号. 下面对每种公式的写法逐一介绍.\n单行编号\\begin&#123;equation&#125;\\label&#123;...&#125;\\int_0^1f(t)dt = \\iint_Dg(x,y)dxdy.\\end&#123;equation&#125;\n\n单行不编号不编号公式应避免使用 $$...$$, 因为它可能会产生不良间距. 可以用\n\\[\\int_0^1f(t)dt = \\iint_Dg(x,y)dxdy.\\]\n\n也可以这样写\n\\begin&#123;equation*&#125;\\int_0^1f(t)dt = \\iint_Dg(x,y)dxdy.\\end&#123;equation*&#125;\n\n多行编号多行用 &amp; 对齐，公式如下\n\\begin&#123;equation&#125;\\label&#123;...&#125;\\begin&#123;split&#125;\\frac&#123;1&#125;&#123;2&#125; (\\sin(x+y) + \\sin(x-y)) =&amp; \\frac&#123;1&#125;&#123;2&#125;(\\sin x \\cos y + \\cos x \\sin y)\\\\&amp; + \\frac&#123;1&#125;&#123;2&#125; (\\sin x \\cos y - \\cos x \\sin y)\\\\=&amp; \\sin x \\cos y.\\end&#123;split&#125;\\end&#123;equation&#125;\n\n另一个例子\n\\begin&#123;equation&#125;\\label&#123;...&#125;\\begin&#123;dcases&#125;\\frac&#123;dS&#125;&#123;dt&#125; = \\Lambda - \\beta SI - \\mu S -\\mu_1 mZS + \\delta_0R, \\\\\\frac&#123;dI&#125;&#123;dt&#125; = \\beta SI - (\\mu+\\delta+\\gamma)I.\\end&#123;dcases&#125;\\end&#123;equation&#125;\n\n\n\n多行不编号例子如下\n\\begin&#123;align*&#125;\\frac&#123;1&#125;&#123;2&#125; (\\sin(x+y) + \\sin(x-y)) =&amp; \\frac&#123;1&#125;&#123;2&#125;(\\sin x \\cos y + \\cos x \\sin y)\\\\&amp; + \\frac&#123;1&#125;&#123;2&#125; (\\sin x \\cos y - \\cos x \\sin y)\\\\=&amp; \\sin x \\cos y.\\end&#123;align*&#125;\n\n\n\n二、引用包括图片、公式和参考文献的引用。（todo）\n三、表格表格可以进行合并操作，但语法有点点复杂，而且并不是所见即所得，还是比较考研操作。\n此外列表的语法也记录在这里\n① 表格这里是表格相关的语法。（todo）\n② 列表下面记录一下 latex 相关的排版\n封面横线排版使用了下面这种写法\n\\begin&#123;spacing&#125;&#123;2.5&#125;    \\begin&#123;center&#125;        &#123;\\zihao&#123;-3&#125; \\textbf&#123;学\\quad\\quad 院&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu xxxxxx&#125;&#125;&#125; \\par        &#123;\\zihao&#123;-3&#125; \\textbf&#123;专\\quad\\quad 业&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu xxxxxxxxxx&#125;&#125;&#125; \\par        &#123;\\zihao&#123;-3&#125; \\textbf&#123;学生姓名&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu xxx&#125;&#125;&#125; \\par        &#123;\\zihao&#123;-3&#125; \\textbf&#123;学生学号&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu xxxxxxxxxx&#125;&#125;&#125; \\par        &#123;\\zihao&#123;-3&#125; \\textbf&#123;指导老师&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu xxx&#125;&#125;&#125; \\par        &#123;\\zihao&#123;-3&#125; \\textbf&#123;提交时间&#125;         \\underline&#123;\\makebox[17em][c]&#123;\\zihao&#123;-3&#125;\\kaishu 2023年4月1日&#125;&#125;&#125; \\par    \\end&#123;center&#125;\\end&#123;spacing&#125;","categories":["tips"],"tags":["latex"]}]