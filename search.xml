<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>latex</title>
      <link href="/2023/04/01/tips/latex/"/>
      <url>/2023/04/01/tips/latex/</url>
      
        <content type="html"><![CDATA[<p>简单记一下 latex 相关的记法</p><span id="more"></span><h1 id="环境配置问题"><a href="#环境配置问题" class="headerlink" title="环境配置问题"></a>环境配置问题</h1><p>众所周知，latex 的编译属于老大难问题</p><h2 id="一、使用模板提示“缺少-sty-文件”"><a href="#一、使用模板提示“缺少-sty-文件”" class="headerlink" title="一、使用模板提示“缺少 .sty 文件”"></a>一、使用模板提示“缺少 .sty 文件”</h2><p>假设你已经有 .sty 文件了，现在的主要问题就是 .sty 文件放在哪里：<br>① 放在 .tex 所在目录下；<br>② 放在 latex 的 .sty 库目录下；</p><p>下面介绍方法 ②</p><p>step1. 输入 <code>kpsewhich --var-value=TEXMFHOME</code>，按回车，得到一个路径,打开这个路径（文件夹）。<br>如果路径中的某一层或几层文件夹不存在，就创建它们</p><p>step2. 最后会位于 texmf 文件夹。 在 texmf 中创建 tex 文件夹，在 tex 文件夹中创建 latex 文件夹。<br>（把现在的路径记为 <code>TEXMFHOME/tex/latex</code>）</p class='item-img' data-src='/2023/04/01/tips/latex/image-20220323102926972.png'><img src="/2023/04/01/tips/latex/image-20220323102926972.png" alt="image-20220323102926972" style="zoom: 67%;"><p>step3. 在 latex 文件夹下创建一个与 .sty 同名的文件夹，然后把 .sty 放进新建的这个文件夹里</p><p>如上图所示，我的 <code>picins.sty</code> 就存放在 <code>picins</code> 文件夹内</p><p>目前已经下载的包：</p><ol><li><p>nexus.sty, 下载地址<a href="https://www.latexstudio.net/archives/8591.html">一个漂亮的LaTeX模板设计</a></p></li><li><p>easyphys.sty, 下载地址 <a href="https://www.latexstudio.net/index/details/index/mid/2314.html">Elegentbook魔改版</a></p></li></ol><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>我用的是 texlive，简单记一下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看某个 .sty 是否存在</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kpsewhich &lt;package-name&gt;.sty</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看所有的已安装包</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">tlmgr list --only-installed</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看 texlive 版本</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">latex -v</span><br><br></code></pre></td></tr></table></figure><h1 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h1><h2 id="一、公式"><a href="#一、公式" class="headerlink" title="一、公式"></a>一、公式</h2><p>Latex 的一大优势就是编辑公式，下面进行介绍</p><p>此外强推一个网站，可以识别手写符号：<a href="http://detexify.kirelabs.org/classify.html">Detexify LaTeX handwritten symbol recognition (kirelabs.org)</a></p><h3 id="1-不同的公式编辑"><a href="#1-不同的公式编辑" class="headerlink" title="1. 不同的公式编辑"></a>1. 不同的公式编辑</h3><p>公式分为行内公式和行间公式，下面分别进行说明</p><h4 id="①-行内公式"><a href="#①-行内公式" class="headerlink" title="① 行内公式"></a>① 行内公式</h4><p>行内公式统一使用<code>$...$</code>来表达. <code>$</code>前后一般要有空格, 除非公式后面有标点符号</p><h4 id="②-行间公式"><a href="#②-行间公式" class="headerlink" title="② 行间公式"></a>② 行间公式</h4><p>对于行间公式, 要么编号, 要么不编号; 要么单行, 要么多行. 通过组合之后可知行间公式有四种: 单行编号、单行不编号、多行编号和多行不编号. 下面对每种公式的写法逐一介绍.</p><h5 id="单行编号"><a href="#单行编号" class="headerlink" title="单行编号"></a>单行编号</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<span class="hljs-keyword">\label</span>&#123;...&#125;<br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>0<span class="hljs-built_in">^</span>1f(t)dt = <span class="hljs-keyword">\iint</span><span class="hljs-built_in">_</span>Dg(x,y)dxdy.<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><h5 id="单行不编号"><a href="#单行不编号" class="headerlink" title="单行不编号"></a>单行不编号</h5><p>不编号公式应避免使用 <code>$$...$$</code>, 因为它可能会产生不良间距. 可以用</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\[</span><br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>0<span class="hljs-built_in">^</span>1f(t)dt = <span class="hljs-keyword">\iint</span><span class="hljs-built_in">_</span>Dg(x,y)dxdy.<br><span class="hljs-keyword">\]</span><br></code></pre></td></tr></table></figure><p>也可以这样写</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation*&#125;<br><span class="hljs-keyword">\int</span><span class="hljs-built_in">_</span>0<span class="hljs-built_in">^</span>1f(t)dt = <span class="hljs-keyword">\iint</span><span class="hljs-built_in">_</span>Dg(x,y)dxdy.<br><span class="hljs-keyword">\end</span>&#123;equation*&#125;<br></code></pre></td></tr></table></figure><h5 id="多行编号"><a href="#多行编号" class="headerlink" title="多行编号"></a>多行编号</h5><p>多行用 <code>&amp;</code> 对齐，公式如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<span class="hljs-keyword">\label</span>&#123;...&#125;<br><span class="hljs-keyword">\begin</span>&#123;split&#125;<br><span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125; (<span class="hljs-keyword">\sin</span>(x+y) + <span class="hljs-keyword">\sin</span>(x-y)) =<span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125;(<span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y + <span class="hljs-keyword">\cos</span> x <span class="hljs-keyword">\sin</span> y)<span class="hljs-keyword">\\</span><br><span class="hljs-built_in">&amp;</span> + <span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125; (<span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y - <span class="hljs-keyword">\cos</span> x <span class="hljs-keyword">\sin</span> y)<span class="hljs-keyword">\\</span><br>=<span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y.<br><span class="hljs-keyword">\end</span>&#123;split&#125;<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p>另一个例子</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<span class="hljs-keyword">\label</span>&#123;...&#125;<br><span class="hljs-keyword">\begin</span>&#123;dcases&#125;<br><span class="hljs-keyword">\frac</span>&#123;dS&#125;&#123;dt&#125; = <span class="hljs-keyword">\Lambda</span> - <span class="hljs-keyword">\beta</span> SI - <span class="hljs-keyword">\mu</span> S -<span class="hljs-keyword">\mu</span><span class="hljs-built_in">_</span>1 mZS + <span class="hljs-keyword">\delta</span><span class="hljs-built_in">_</span>0R, <span class="hljs-keyword">\\</span><br><span class="hljs-keyword">\frac</span>&#123;dI&#125;&#123;dt&#125; = <span class="hljs-keyword">\beta</span> SI - (<span class="hljs-keyword">\mu</span>+<span class="hljs-keyword">\delta</span>+<span class="hljs-keyword">\gamma</span>)I.<br><span class="hljs-keyword">\end</span>&#123;dcases&#125;<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><h5 id="多行不编号"><a href="#多行不编号" class="headerlink" title="多行不编号"></a>多行不编号</h5><p>例子如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;align*&#125;<br><span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125; (<span class="hljs-keyword">\sin</span>(x+y) + <span class="hljs-keyword">\sin</span>(x-y)) =<span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125;(<span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y + <span class="hljs-keyword">\cos</span> x <span class="hljs-keyword">\sin</span> y)<span class="hljs-keyword">\\</span><br><span class="hljs-built_in">&amp;</span> + <span class="hljs-keyword">\frac</span>&#123;1&#125;&#123;2&#125; (<span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y - <span class="hljs-keyword">\cos</span> x <span class="hljs-keyword">\sin</span> y)<span class="hljs-keyword">\\</span><br>=<span class="hljs-built_in">&amp;</span> <span class="hljs-keyword">\sin</span> x <span class="hljs-keyword">\cos</span> y.<br><span class="hljs-keyword">\end</span>&#123;align*&#125;<br></code></pre></td></tr></table></figure><h2 id="二、引用"><a href="#二、引用" class="headerlink" title="二、引用"></a>二、引用</h2><p>包括图片、公式和参考文献的引用。（todo）</p><h2 id="三、表格"><a href="#三、表格" class="headerlink" title="三、表格"></a>三、表格</h2><p>表格可以进行合并操作，但语法有点点复杂，而且并不是所见即所得，还是比较考研操作。</p><p>此外列表的语法也记录在这里</p><h4 id="①-表格"><a href="#①-表格" class="headerlink" title="① 表格"></a>① 表格</h4><p>这里是表格相关的语法。（todo）</p><h4 id="②-列表"><a href="#②-列表" class="headerlink" title="② 列表"></a>② 列表</h4><p>下面记录一下 latex 相关的排版</p><h5 id="封面横线排版"><a href="#封面横线排版" class="headerlink" title="封面横线排版"></a>封面横线排版</h5><p>使用了下面这种写法</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;spacing&#125;&#123;2.5&#125;<br>    <span class="hljs-keyword">\begin</span>&#123;center&#125;<br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;学<span class="hljs-keyword">\quad</span><span class="hljs-keyword">\quad</span> 院&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> xxxxxx&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;专<span class="hljs-keyword">\quad</span><span class="hljs-keyword">\quad</span> 业&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> xxxxxxxxxx&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;学生姓名&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> xxx&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;学生学号&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> xxxxxxxxxx&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;指导老师&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> xxx&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>        &#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125; <span class="hljs-keyword">\textbf</span>&#123;提交时间&#125; <br>        <span class="hljs-keyword">\underline</span>&#123;<span class="hljs-keyword">\makebox</span>[17em][c]&#123;<span class="hljs-keyword">\zihao</span>&#123;-3&#125;<span class="hljs-keyword">\kaishu</span> 2023年4月1日&#125;&#125;&#125; <span class="hljs-keyword">\par</span><br>    <span class="hljs-keyword">\end</span>&#123;center&#125;<br><span class="hljs-keyword">\end</span>&#123;spacing&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo博客</title>
      <link href="/2023/03/31/tips/hexo/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/31/tips/hexo/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>个人配置 hexo 的记录，参考了 B 站的教程。</p><span id="more"></span><p>参考教程：<a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&seid=17488073384275823610">手把手教你从 0 开始搭建自己的个人博客 |无坑版视频教程| hexo</a></p><h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello, world"></a>Hello, world</h1><p>先让博客跑起来，下面从本地配置 hexo 到远程部署博客进行描述</p><h2 id="一、-基础工具：node-npm，git-hexo"><a href="#一、-基础工具：node-npm，git-hexo" class="headerlink" title="一、 基础工具：node, npm，git, hexo"></a>一、 基础工具：node, npm，git, hexo</h2><p>windows 下直接安装 node.js 即可，git 肯定都有不必多说, hexo 是用 npm 下载下来的，很方便</p><h3 id="1-安装-node-js"><a href="#1-安装-node-js" class="headerlink" title="1. 安装 node.js"></a>1. 安装 node.js</h3><p>windows 下自己找个教程安装 nodejs</p><p>下载地址：<a href="https://nodejs.org/zh-cn/">node.js 官方下载</a></p><p>安装说明：<a href="https://www.cnblogs.com/tanghaorong/p/14652357.html">nodeJS 的安装与配置</a></p><h3 id="2-安装和配置-git"><a href="#2-安装和配置-git" class="headerlink" title="2. 安装和配置 git"></a>2. 安装和配置 git</h3><p>注：git 不仅要安装，而且需要配置名字和 email</p><h4 id="①-安装-git"><a href="#①-安装-git" class="headerlink" title="① 安装 git"></a>① 安装 git</h4><p>下面是 linux 下安装 git 的方法，windows 在官网找安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get updata</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get upgrade</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install git-all</span><br></code></pre></td></tr></table></figure><h4 id="②-设置账户信息"><a href="#②-设置账户信息" class="headerlink" title="② 设置账户信息"></a>② 设置账户信息</h4><p>安装完 git 后需要先创建个名字和 email 地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br><br><span class="hljs-comment"># 查看已有的配置</span><br>git config --list<br>git config --global --list<br></code></pre></td></tr></table></figure><p>然后创建 SSH Key, 用于将博客部署到 github, 如果不想部署到 github 就不用这一步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ~/.ssh<br>$ <span class="hljs-built_in">ls</span> -a<br></code></pre></td></tr></table></figure><p>如果<code>~/ssh</code>目录里没有 <code>id_rsa</code> 和 <code>id_rsa.pub</code> （多半没有），则敲以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下面的 email 和 前面的 user.email 要匹配</span><br>$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;email@example.com</span><br></code></pre></td></tr></table></figure><p>此时<code>./ssh</code>中会生成 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 两个文件，其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥</p><p>注意这个<code>id_rsa.pub</code>文件，之后会用到</p><h3 id="3-安装-hexo"><a href="#3-安装-hexo" class="headerlink" title="3. 安装 hexo"></a>3. 安装 hexo</h3><p>敲命令，这个命令在 hexo 官网上有介绍，具体可以查看<a href="https://hexo.io/zh-cn/">hexo 官网</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>windows 下管理员权限运行一个终端，使用 npm 即可</p><p>(忘了加 sudo 把我坑死了，npm 提示说什么是代理的问题，结果并不能解决问题)</p><h2 id="二、生成本地文件"><a href="#二、生成本地文件" class="headerlink" title="二、生成本地文件"></a>二、生成本地文件</h2><h3 id="1-初始化一个目录"><a href="#1-初始化一个目录" class="headerlink" title="1. 初始化一个目录"></a>1. 初始化一个目录</h3><p>选择一个喜欢的路径新建文件夹，敲以下命令初始化一个博客目录</p><p>这个命令会新建一个<code>ZenithBlog</code>文件夹，并加载一系列组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo hexo init ZenithBlog<br></code></pre></td></tr></table></figure><p>PS.我在这里遇到了个坑，提示说我无法连接</p><p>(2023.3.30 考古: 我设置这个代理之后反而不能正常连接了, 坑爹)</p><p>解决办法是设置 git 的代理，敲以下代码：（我的代理端口是 10808，协议是 socks5)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global http.proxy socks5://127.0.0.1:10808<br>$ git config --global https.proxy socks5://127.0.0.1:10808<br></code></pre></td></tr></table></figure><p>将来想要取消代理可以输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>$ git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>想要查看 git 的 config 配置信息可以输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --system --list<br>$ git config --global  --list<br>$ git config --<span class="hljs-built_in">local</span>  --list<br></code></pre></td></tr></table></figure><h3 id="2-在目录中安装必要组件"><a href="#2-在目录中安装必要组件" class="headerlink" title="2. 在目录中安装必要组件"></a>2. 在目录中安装必要组件</h3><p>进入<code>ZenithBlog</code>并敲以下命令进一步加载一些组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ZenithBlog<br>$ sudo npm install<br></code></pre></td></tr></table></figure><p>现在即可启动 hexo，访问本地 4000 端口即可，也可通过以下指令指定端口进行访问</p><p>以 44944 端口为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s -p 44944<br></code></pre></td></tr></table></figure><p>在浏览器访问 <code>localhost:44944</code>即可</p><h2 id="3-部署到-github"><a href="#3-部署到-github" class="headerlink" title="3. 部署到 github"></a>3. 部署到 github</h2><p>step1. 在<code>ZenithBlog/</code>目录下载必要组件</p><p>这个组件非常重要，利用 git 来部署专用，不论是部署到 github 还是部署到阿里云都需要。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>step2. 修改在<code>ZenithBlog/_config.yml</code> 中的 <code>deploy</code>值</p><p>注意把下面的 git 地址改成自己的 github 相关地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:hhhynnn/hhhynnn.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>step3. 把博客代码 push 到 github 上去，注意不要包括 /public 目录</p><p>ps. 需要提前创建 hhhnnn.github.io 这个项目, hhhynnn 是 github 用户名，貌似必须使用用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git add remote origin git@github.com:hhhynnn/hhhynnn.github.io.git</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git push -u origin main</span><br></code></pre></td></tr></table></figure><h1 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h1><h2 id="一、切换主题"><a href="#一、切换主题" class="headerlink" title="一、切换主题"></a>一、切换主题</h2><p>主题资源地址： <a href="https://hexo.io/themes/">Themes</a>，东西很多，随便找</p><p>下面介绍如何配置主题 <a href="https://github.com/tufu9441/maupassant-hexo">maupassant-hexo</a></p><p>先下载主题到<code>ZenithBlog/themes/maupassant</code>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> git@github.com:tufu9441/maupassant-hexo.git ./themes/maupassant<br></code></pre></td></tr></table></figure><p>按照主题作者的要求，下载必须要组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-renderer-pug --save<br>$ npm install hexo-renderer-sass --save<br></code></pre></td></tr></table></figure><p>修改<code>ZenithBlog/_config.yml</code>文件的<code>theme</code>值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">maupassant</span><br></code></pre></td></tr></table></figure><p>清除原文件（非必需），重新生成文件，部署到远端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure><p>PS.此处推荐另一个主题 <a href="https://kr-demo.candinya.com/posts/Kratos-Rebirth-Manual/">Kratos-Rebirth</a></p><h5 id="介绍更换到主题even"><a href="#介绍更换到主题even" class="headerlink" title="介绍更换到主题even"></a>介绍更换到主题<a href="https://github.com/ahonn/hexo-theme-even">even</a></h5><p>根据作者的描述，需要输入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-renderer-scss hexo-renderer-swig --save<br>$ git <span class="hljs-built_in">clone</span> https://github.com/ahonn/hexo-theme-even themes/even<br>$ <span class="hljs-built_in">cp</span> themes/even/_config.yml.example themes/even/_config.yml<br></code></pre></td></tr></table></figure><h2 id="二、配置主题界面"><a href="#二、配置主题界面" class="headerlink" title="二、配置主题界面"></a>二、配置主题界面</h2><p>以 maupassant 为例</p><p>先修改<code>ZenithBlog/_config.yml</code>文件中的以下值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;Zenith&quot;</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">&quot;Studying and loving you~&quot;</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Zenith&quot;</span><br><span class="hljs-attr">keywords:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;笔记&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;HTML&quot;</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">Zenith</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&quot;Asia/Shanghai&quot;</span> <span class="hljs-comment">#网站时区</span><br><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://hyinan.com/</span> <span class="hljs-comment">#网站域名</span><br></code></pre></td></tr></table></figure><p>再修改<code>ZenithBlog/themes/maupassant/_config.yml</code>，修改以下值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">## 修改顶部菜单栏，把about和rss去掉（这俩指向了无用链接）</span><br><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">page:</span> <span class="hljs-string">home</span><br>    <span class="hljs-attr">directory:</span> <span class="hljs-string">.</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fa-home</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">page:</span> <span class="hljs-string">archive</span><br>    <span class="hljs-attr">directory:</span> <span class="hljs-string">archives/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fa-archive</span><br>  <span class="hljs-comment"># - page: about</span><br>  <span class="hljs-comment">#   directory: about/</span><br>  <span class="hljs-comment">#   icon: fa-user</span><br>  <span class="hljs-comment"># - page: rss</span><br>  <span class="hljs-comment">#   directory: atom.xml</span><br>  <span class="hljs-comment">#   icon: fa-rss</span><br><br><span class="hljs-comment">## 修改侧边栏，把search去掉</span><br><span class="hljs-attr">widgets:</span> <span class="hljs-comment">## Six widgets in sidebar provided: search, category, tag, recent_posts, recent_comments and links.</span><br>  <span class="hljs-comment">#  - search</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">category</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">tag</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">recent_posts</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">recent_comments</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">links</span><br><br><span class="hljs-comment">## 修改相关链接</span><br><span class="hljs-attr">links:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">Bilibili</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">https://space.bilibili.com/434460090</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">电影资源</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">http://www.yinfans.me/</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">动漫资源</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">https://vcb-s.com/</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">壁纸资源</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">wallhaven.cc</span><br></code></pre></td></tr></table></figure><h1 id="写作指南"><a href="#写作指南" class="headerlink" title="写作指南"></a>写作指南</h1><p>下面主要描述一下如何引用链接、插入图片、设置文章的标签和类别等。</p><h2 id="一、markdown-引用链接"><a href="#一、markdown-引用链接" class="headerlink" title="一、markdown 引用链接"></a>一、markdown 引用链接</h2><p>链接主要就是指图片链接，需要用到 <code>hexo-asset-image</code> 这个插件，下面进行介绍</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-asset-image --save<br><br></code></pre></td></tr></table></figure><h3 id="1-引用图片"><a href="#1-引用图片" class="headerlink" title="1. 引用图片"></a>1. 引用图片</h3><p>先确保<code>_config.yml</code>满足：<code>post_asset_folder: true</code></p><p>这个组件目前有 bug（记录于 2020.05.27）</p><p>解决方案为将文件<code>node_modules/hexo-asset-image/index.js</code>替换为如下的内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&quot;use strict&quot;</span>;<br><span class="hljs-keyword">var</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cheerio&quot;</span>);<br><br><span class="hljs-comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPosition</span>(<span class="hljs-params">str, m, i</span>) &#123;<br>  <span class="hljs-keyword">return</span> str.<span class="hljs-title function_">split</span>(m, i).<span class="hljs-title function_">join</span>(m).<span class="hljs-property">length</span>;<br>&#125;<br><br><span class="hljs-keyword">var</span> version = <span class="hljs-title class_">String</span>(hexo.<span class="hljs-property">version</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;after_post_render&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;<br>  <span class="hljs-keyword">var</span> config = hexo.<span class="hljs-property">config</span>;<br>  <span class="hljs-keyword">if</span> (config.<span class="hljs-property">post_asset_folder</span>) &#123;<br>    <span class="hljs-keyword">var</span> link = data.<span class="hljs-property">permalink</span>;<br>    <span class="hljs-keyword">if</span> (version.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-title class_">Number</span>(version[<span class="hljs-number">0</span>]) == <span class="hljs-number">3</span>)<br>      <span class="hljs-keyword">var</span> beginPos = <span class="hljs-title function_">getPosition</span>(link, <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">var</span> beginPos = <span class="hljs-title function_">getPosition</span>(link, <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-number">3</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br>    <span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&quot;/&quot;</span>) + <span class="hljs-number">1</span>;<br>    link = link.<span class="hljs-title function_">substring</span>(beginPos, endPos);<br><br>    <span class="hljs-keyword">var</span> toprocess = [<span class="hljs-string">&quot;excerpt&quot;</span>, <span class="hljs-string">&quot;more&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; toprocess.<span class="hljs-property">length</span>; i++) &#123;<br>      <span class="hljs-keyword">var</span> key = toprocess[i];<br><br>      <span class="hljs-keyword">var</span> $ = cheerio.<span class="hljs-title function_">load</span>(data[key], &#123;<br>        <span class="hljs-attr">ignoreWhitespace</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">xmlMode</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">lowerCaseTags</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">decodeEntities</span>: <span class="hljs-literal">false</span>,<br>      &#125;);<br><br>      $(<span class="hljs-string">&quot;img&quot;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> ($(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;src&quot;</span>)) &#123;<br>          <span class="hljs-comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br>          <span class="hljs-keyword">var</span> src = $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;src&quot;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;/&quot;</span>);<br>          <span class="hljs-keyword">if</span> (!<span class="hljs-regexp">/http[s]*.*|\/\/.*/</span>.<span class="hljs-title function_">test</span>(src) &amp;&amp; !<span class="hljs-regexp">/^\s*\//</span>.<span class="hljs-title function_">test</span>(src)) &#123;<br>            <span class="hljs-comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br>            <span class="hljs-comment">// In addition, to support multi-level local directory.</span><br>            <span class="hljs-keyword">var</span> linkArray = link.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">elem</span>) &#123;<br>              <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&quot;&quot;</span>;<br>            &#125;);<br>            <span class="hljs-keyword">var</span> srcArray = src.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">elem</span>) &#123;<br>              <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&quot;&quot;</span> &amp;&amp; elem != <span class="hljs-string">&quot;.&quot;</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (srcArray.<span class="hljs-property">length</span> &gt; <span class="hljs-number">1</span>) srcArray.<span class="hljs-title function_">shift</span>();<br>            src = srcArray.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>            $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;src&quot;</span>, config.<span class="hljs-property">root</span> + link + src);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span> &amp;&amp;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span> + config.<span class="hljs-property">root</span> + link + src);<br>          &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;no src attr, skipped...&quot;</span>);<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>($(<span class="hljs-variable language_">this</span>));<br>        &#125;<br>      &#125;);<br>      data[key] = $.<span class="hljs-title function_">html</span>();<br>    &#125;<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>在文章中引用图片的方法如下，以<code>每日必读.md</code>为例</p><p>注：<code>每日必读/</code>文件夹和<code>每日必读.md</code>必须满足“同名”且“处在同一文件夹下</p><p>且路径一定不能有空格（最好不要中英文混用，否则 vscode 的自动格式化会在中英文之间加空格）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![](<span class="hljs-link">./每日必读/xxx</span>)<br></code></pre></td></tr></table></figure><h2 id="二、分类和标签"><a href="#二、分类和标签" class="headerlink" title="二、分类和标签"></a>二、分类和标签</h2><p>参考教程： <a href="https://hexo.io/zh-cn/docs/front-matter">hexo 文档之 front-matter</a></p><h3 id="1-分类-categories"><a href="#1-分类-categories" class="headerlink" title="1. 分类 categories"></a>1. 分类 categories</h3><p>层次分类用 categories，如下面的分类表示本文章属于 Dirary-&gt;Life 类（Dirary 是父类）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Life</span><br></code></pre></td></tr></table></figure><p>一篇文章可以同时处于多个分类模块下，每一个都要用<code>-[]</code>标记</p><p>举例：下面的分类表示文章属于 Diary-&gt;PlayStation，也属于 Diary-&gt;Gage，也属于 Life</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">PlayStation</span>]<br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">Games</span>]<br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">Life</span>]<br></code></pre></td></tr></table></figure><h3 id="2-标签-tags"><a href="#2-标签-tags" class="headerlink" title="2. 标签 tags"></a>2. 标签 tags</h3><p>标签很粗暴，直接连续写下去</p><p>举例：下面的分类表示文章属于 PS3 和 Games</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">PS3</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Games</span><br></code></pre></td></tr></table></figure><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>arknights 主题无法在服务器上正确渲染，百思不得其解目前已经尝试过方法</p><ol><li>部署到本地或github，发现都能正确渲染</li><li>更新服务器 node.js 版本，发现仍然不能正确渲染</li></ol><h2 id="一、nginx-已安装，但文件混乱"><a href="#一、nginx-已安装，但文件混乱" class="headerlink" title="一、nginx 已安装，但文件混乱"></a>一、nginx 已安装，但文件混乱</h2><p>强烈建议重装 nginx，下面是我硬着头皮没重装，进行的尝试：</p><p>网上说直接配置 nginx.conf, 使用  <code>find / -name nginx.conf</code> 命令可以找到这个文件</p><p>但我的 nginx 是系统自带的，这个配置文件里没有关于 80 端口的配置</p><p>不过在配置文件里看到了一句话 <code>include /etc/nginx/modules-enables/*.conf</code>，指出了其他配置文件目录也存在配置文件，几经转折，终于找到了有关 80 端口的配置，在 <code>/etc/nginx/sites-available/default</code> 这个文件内</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">这文件的名字甚至都不是 nginx.conf，是真的坑爹</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">vim /etc/nginx/sites-available/default</span><br>------<br>user root;<br>...<br>server &#123;<br>    # 这两项用于定位， 一定是监听 80 端口的 server<br>    listen 80 default_server;<br>    listen [::]:80 default_server;<br><br>    # 主页文件的 usr, dir<br>    root /var/www/zenith;<br><br>    index index.html index.htm index.nginx-debian.html;<br>    server_name hyinan.com;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到服务器</title>
      <link href="/2023/03/31/tips/hexo/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/03/31/tips/hexo/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>这个部署过程还挺坑，记录一下方面自己复刻, 主要是配置服务器的 nginx 和 git</p><span id="more"></span><h3 id="1-服务器配置"><a href="#1-服务器配置" class="headerlink" title="(1) 服务器配置"></a>(1) 服务器配置</h3><p>主要分为 git 远程连接配置，git hook 文件配置，nginx 主页配置这三步</p><p>参考教程：<a href="https://xie.infoq.cn/article/8fe4fa3098aaf70bc38749847">在自己的服务器上部署 hexo 博客</a></p><p>配置服务器的第一步是设置无密码登陆，即在服务器上修改 <code>~/.ssh/authorized_keys</code>文件，把客户端的<code>~/ssh/id_rsa.pub</code>复制到里面，即可实现直接 ssh 链接，不需要密码验证（github 的 ssh 连接原理也是如此）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">vim ~/.ssh/authorized_keys</span><br>---<br>(把自己电脑的 id_rsa.pub 数据复制到文件里)<br>---<br></code></pre></td></tr></table></figure><h4 id="1-配置服务器-nginx-服务"><a href="#1-配置服务器-nginx-服务" class="headerlink" title="1 配置服务器 nginx 服务"></a>1 配置服务器 nginx 服务</h4><p>重装过一遍服务器系统，ssh 登陆不上了</p><p>解决办法是本地 .ssh 文件夹内的 kowns_hosts 删除服务器相关项目</p><h5 id="1-卸载已存在的-nginx"><a href="#1-卸载已存在的-nginx" class="headerlink" title="1. 卸载已存在的 nginx"></a>1. 卸载已存在的 nginx</h5><p>如果已存在 nginx 可以考虑卸载了。。。方便跟教程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查找 nginx 相关文件</span><br>whereis nginx | tr &#x27; &#x27; &#x27;\n&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除上述文件/文件夹</span><br>rm -rf  xxxx/nginx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除 nginx</span><br>apt-get remove nginx*<br><br></code></pre></td></tr></table></figure><h5 id="2-下载-nginx"><a href="#2-下载-nginx" class="headerlink" title="2. 下载 nginx"></a>2. 下载 nginx</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">进入安装目录</span><br>cd /usr/local/src/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载</span><br>wget http://nginx.org/download/nginx-1.22.0.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压</span><br>tar -xvf nginx-1.22.0.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重命名</span><br>mv  nginx-1.10.2  nginx<br><br></code></pre></td></tr></table></figure><h5 id="3-编译-nginx"><a href="#3-编译-nginx" class="headerlink" title="3. 编译 nginx"></a>3. 编译 nginx</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">进入目录并编译安装</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> nginx</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装编译必须的包</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install libpcre3 libpcre3-dev</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">./configure</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">make</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">make install</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置 ngxin 的快捷执行</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">alias</span> nginx=/usr/local/nginx/sbin/nginx</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">通过修改环境变量的方式也可以让 nginx 快捷执行（没必要, <span class="hljs-built_in">alias</span> 够了）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">vim ~/.bashrc</span><br>---<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加这一句话</span><br>export PATH=$PATH:/usr/local/nginx/sbin/<br>---<br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">source</span> ~/.bashrc</span><br></code></pre></td></tr></table></figure><h5 id="4-设置服务器主页文件夹"><a href="#4-设置服务器主页文件夹" class="headerlink" title="4. 设置服务器主页文件夹"></a>4. 设置服务器主页文件夹</h5><p>方法是修改<code>nginx.conf</code> 文件，如下步骤</p><p><strong>找到 conf 文件</strong></p><p>下面看到了两个 nginx.conf，我们选择 nginx 文件夹下存在 sbin 文件夹的那个路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">find / -name nginx.conf</span><br>----<br>/usr/local/nginx/conf/nginx.conf<br>/usr/local/src/nginx/conf/nginx.conf<br></code></pre></td></tr></table></figure><p><strong>修改 conf 文件</strong></p><p>特别注意：<code> /root/blog/public</code> 这个路径是将来服务器主页的地址，后面配置 git 的 hook 函数时也要用到这个地址！！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">vim /usr/local/nginx/conf/nginx.conf</span><br>---<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加 user root;</span><br>user root;<br>...<br>http&#123;<br>  ...<br>  server &#123;<br>    location / &#123;<br>      # 修改为 root /root/blog/public; 后面我们的服务器主页就设置在这个文件夹下<br>      root /root/blog/public;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="5-运行-nginx"><a href="#5-运行-nginx" class="headerlink" title="5. 运行 nginx"></a>5. 运行 nginx</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看 80 端口占用并 <span class="hljs-built_in">kill</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">netstat -lnp | grep 80</span><br>-----<br>tcp6       0      0 :::80                   :::*                    LISTEN      42464/apache2<br>-----<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制杀死进程 42464，这个数字在上面的输出中有出现</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">kill</span> -9 42464</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">apache2 的占用比较特殊，需要手动关闭</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">service apache2 stop</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动 nginx</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看端口占用, nginx 主页是 80 端口</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">lsof -i:80</span><br><br></code></pre></td></tr></table></figure><h5 id="6-重启-ngxinx"><a href="#6-重启-ngxinx" class="headerlink" title="6. 重启 ngxinx"></a>6. 重启 ngxinx</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重启</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx -s reload</span><br></code></pre></td></tr></table></figure><h4 id="2-配置-git-仓库"><a href="#2-配置-git-仓库" class="headerlink" title="2 配置 git 仓库"></a>2 配置 git 仓库</h4><p><strong>安装 git</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get updata</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get upgrade</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install git-all</span><br></code></pre></td></tr></table></figure><p><strong>新建 git 仓库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">新建空仓库</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /root/blog/</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git init --bare zenithBlog.git</span><br></code></pre></td></tr></table></figure><p><strong>添加 hook 用文件</strong></p><p>特别注意，配置 git 的 hook时，要用到配置 nginx 时定义的服务器主页地址 <code> /root/blog/public</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">新建 post-receive 文件</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">vim ./zenithBlog.git/hooks/post-receive</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">写 hook 文件</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">--work-tree 是 nginx.conf 中定义的服务器主页地址</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">--git-dir 是 hexo-deploy 的目标文件夹，也就是你刚刚创建的那个</span><br>-----<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>git --work-tree=/root/blog/public --git-dir=/root/blog/zenithBlog.git checkout -f<br>-----<br></code></pre></td></tr></table></figure><p><strong>修改 post-receive 为可执行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">chmod</span> +x ./zenithBlog.git/hooks/post-receive</span><br></code></pre></td></tr></table></figure><h3 id="（2）本地配置"><a href="#（2）本地配置" class="headerlink" title="（2）本地配置"></a>（2）本地配置</h3><p>本地配置只有一个，修改<code>_config.yml</code>，定义博客的部署方式，注意把下面的 ip 地址改成服务器地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ./zenithBlog/_config.yml</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">root@xxx.xxx.xxx.xxx:/root/blog/zenithBlog.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>安装 git 部署工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">./zenithBlog/</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm install hexo-deployer-git --save</span><br></code></pre></td></tr></table></figure><h2 id="（3）-部署"><a href="#（3）-部署" class="headerlink" title="（3） 部署"></a>（3） 部署</h2><p>本地执行部署命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">部署到 hexo</span><br>hexo g -d<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo语法</title>
      <link href="/2023/03/31/tips/hexo/hexo%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/03/31/tips/hexo/hexo%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>不常使用 hexo，干脆把 hexo 常用命令直接写进博客里，方便自己看 </p><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建博客</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo new post --path tips/hexo/hexo语法 <span class="hljs-string">&quot;hexo语法&quot;</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">本地调试, 发布到 44944 端口</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo s -p 44944</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">发布到服务器</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo g -d</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">这个命令也是发布到服务器</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm run deploy</span><br></code></pre></td></tr></table></figure><p>删除博客只需要直接删除本地文件, 然后 clean</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo clean</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo g</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
